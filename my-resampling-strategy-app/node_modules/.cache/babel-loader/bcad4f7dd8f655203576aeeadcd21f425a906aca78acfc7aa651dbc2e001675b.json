{"ast":null,"code":"var _jsxFileName = \"C:\\\\Ronald\\\\uOttawa\\\\CSI 6900\\\\Metallic-main\\\\my-resampling-strategy-app\\\\src\\\\ResamplingStrategyForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResamplingStrategyForm = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [metric, setMetric] = useState('F1');\n  const [classifier, setClassifier] = useState('SVM');\n  const [recommendations, setRecommendations] = useState([]);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleMetricChange = e => {\n    setMetric(e.target.value);\n  };\n  const handleClassifierChange = e => {\n    setClassifier(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // You would handle the file upload and process it here\n    // After processing, you would set the recommendations with the results\n    setRecommendations(['BorderlineSMOTE', 'NeighbourhoodCleaningRule', 'CondensedNearestNeighbour']);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Use your data to get the best resampling strategies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Only .csv files are accepted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Upload a File:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Choose a metric:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: metric,\n          onChange: handleMetricChange,\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"F1\",\n            children: \"F1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Choose a classifier:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: classifier,\n          onChange: handleClassifierChange,\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"SVM\",\n            children: \"SVM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Process\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), recommendations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"The recommended sampling methods are:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: recommendations.map((method, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: method\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ResamplingStrategyForm, \"xItDfep2+DUXhVfD8otTH0z1jqs=\");\n_c = ResamplingStrategyForm;\nexport default ResamplingStrategyForm;\nvar _c;\n$RefreshReg$(_c, \"ResamplingStrategyForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ResamplingStrategyForm","_s","file","setFile","metric","setMetric","classifier","setClassifier","recommendations","setRecommendations","handleFileChange","e","target","files","handleMetricChange","value","handleClassifierChange","handleSubmit","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","length","map","method","index","_c","$RefreshReg$"],"sources":["C:/Ronald/uOttawa/CSI 6900/Metallic-main/my-resampling-strategy-app/src/ResamplingStrategyForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ResamplingStrategyForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [metric, setMetric] = useState('F1');\r\n  const [classifier, setClassifier] = useState('SVM');\r\n  const [recommendations, setRecommendations] = useState([]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleMetricChange = (e) => {\r\n    setMetric(e.target.value);\r\n  };\r\n\r\n  const handleClassifierChange = (e) => {\r\n    setClassifier(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // You would handle the file upload and process it here\r\n    // After processing, you would set the recommendations with the results\r\n    setRecommendations([\r\n      'BorderlineSMOTE',\r\n      'NeighbourhoodCleaningRule',\r\n      'CondensedNearestNeighbour',\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Use your data to get the best resampling strategies</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <p>Only .csv files are accepted</p>\r\n        <label>\r\n          Upload a File:\r\n          <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Choose a metric:\r\n          <select value={metric} onChange={handleMetricChange}>\r\n            <option value=\"F1\">F1</option>\r\n            {/* Add other metric options here */}\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Choose a classifier:\r\n          <select value={classifier} onChange={handleClassifierChange}>\r\n            <option value=\"SVM\">SVM</option>\r\n            {/* Add other classifier options here */}\r\n          </select>\r\n        </label>\r\n        <br />\r\n        <button type=\"submit\">Process</button>\r\n      </form>\r\n      {recommendations.length > 0 && (\r\n        <div>\r\n          <h3>The recommended sampling methods are:</h3>\r\n          <ol>\r\n            {recommendations.map((method, index) => (\r\n              <li key={index}>{method}</li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResamplingStrategyForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}