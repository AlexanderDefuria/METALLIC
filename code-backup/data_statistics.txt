target_directory = './Dataset/'

rows_list = []
features_list = []
classes_list = []
minority_cases_list = []
imbalance_ratio_list = []


for filename in os.listdir(target_directory):
    if filename.endswith('.csv'):
        file_path = os.path.join(target_directory, filename)


        df = pd.read_csv(file_path)

        num_rows = len(df)
        num_features = len(df.columns) - 1  
        num_classes = len(df.iloc[:, -1].unique())
        class_counts = df.iloc[:, -1].value_counts()
        minority_cases = class_counts.min()
        imbalance_ratio = class_counts.max() / class_counts.min()


        rows_list.append(num_rows)
        features_list.append(num_features)
        classes_list.append(num_classes)
        minority_cases_list.append(minority_cases)
        imbalance_ratio_list.append(imbalance_ratio)


        # print(f"Dataset: {filename}")
        # print(f"Rows: {num_rows}")
        # print(f"Features: {num_features}")
        # print(f"Classes: {num_classes}")
        # print(f"Minority Cases: {minority_cases}")
        # print(f"Imbalance Ratio: {imbalance_ratio:.2f}\n")


def calculate_statistics(data_list):
    return np.min(data_list), np.max(data_list), np.median(data_list), np.mean(data_list), np.std(data_list)

rows_stats = calculate_statistics(rows_list)
features_stats = calculate_statistics(features_list)
classes_stats = calculate_statistics(classes_list)
minority_cases_stats = calculate_statistics(minority_cases_list)
imbalance_ratio_stats = calculate_statistics(imbalance_ratio_list)


print(f"Rows: Min={rows_stats[0]}, Max={rows_stats[1]}, Median={rows_stats[2]}, Mean={rows_stats[3]:.2f}, Std={rows_stats[4]:.2f}")
print(f"Features: Min={features_stats[0]}, Max={features_stats[1]}, Median={features_stats[2]}, Mean={features_stats[3]:.2f}, Std={features_stats[4]:.2f}")
print(f"Classes: Min={classes_stats[0]}, Max={classes_stats[1]}, Median={classes_stats[2]}, Mean={classes_stats[3]:.2f}, Std={classes_stats[4]:.2f}")
print(f"Minority Cases: Min={minority_cases_stats[0]}, Max={minority_cases_stats[1]}, Median={minority_cases_stats[2]}, Mean={minority_cases_stats[3]:.2f}, Std={minority_cases_stats[4]:.2f}")
print(f"Imbalance Ratio: Min={imbalance_ratio_stats[0]:.2f}, Max={imbalance_ratio_stats[1]:.2f}, Median={imbalance_ratio_stats[2]:.2f}, Mean={imbalance_ratio_stats[3]:.2f}, Std={imbalance_ratio_stats[4]:.2f}")